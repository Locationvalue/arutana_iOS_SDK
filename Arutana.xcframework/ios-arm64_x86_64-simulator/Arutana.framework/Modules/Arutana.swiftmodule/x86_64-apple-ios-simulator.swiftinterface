// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name Arutana
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AVFoundation
import AdSupport
import AppTrackingTransparency
@_exported import Arutana
import CommonCrypto
import DeveloperToolsSupport
import Foundation
import SafariServices
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @objc open class InArutunaUtil : ObjectiveC.NSObject {
  @objc open class func clearTimer(_ timer: Foundation.Timer?)
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(ArutanaLogger) public class ArutanaLogger : ObjectiveC.NSObject {
  @objc(kArutanaLogLevel) public enum LogLevel : Swift.Int {
    case debug = 0
    case info
    case warning
    case error
    public init?(rawValue: Swift.Int)
    public typealias RawValue = Swift.Int
    public var rawValue: Swift.Int {
      get
    }
  }
  @objc public static var logLevel: Arutana.ArutanaLogger.LogLevel
  @objc public static func outputDebug(_ str: Swift.String, cls: Swift.AnyClass? = nil, method: ObjectiveC.Selector? = nil)
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol ArutanaMovieAdDelegate {
  @objc func arutanaMovieReceiveAd()
  @objc func arutanaMovieShowAd()
  @objc func arutanaMovieDidTapAd()
  @objc func arutanaMovieClose()
  @objc func arutanaMovieStartFull()
  @objc func arutanaMovieEndFull()
  @objc func arutanaMovieFailedToReceiveAd(code: Arutana.kArutanaErrorCode)
}
@_inheritsConvenienceInitializers @objc public class ArutanaMovieAd : ObjectiveC.NSObject {
  @objc public var delegate: (any Arutana.ArutanaMovieAdDelegate)?
  @objc public var rootViewController: UIKit.UIViewController?
  @objc override dynamic public init()
  @objc(setLocationId:) public func setLocationId(_ locationId: Swift.String)
  @objc(setUserId:) public func setUserId(_ userId: Swift.String?)
  @objc(setTopMargin:) public func setTopMargin(_ margin: Swift.Int)
  @objc(setBottomMargin:) public func setBottomMargin(_ margin: Swift.Int)
  @objc(setEnableTestMode:) public func setEnableTestMode(_ isTest: Swift.Bool)
  @objc(setTextColor:) public func setTextColor(_ color: UIKit.UIColor)
  @objc(useSafeAreaInsets:) public func useSafeAreaInsets(_ use: Swift.Bool)
  @objc public func dismiss()
  @objc public func preload()
  @objc public func show()
  @objc deinit
}
extension Arutana.ArutanaMovieAd : SafariServices.SFSafariViewControllerDelegate {
  @objc dynamic public func safariViewControllerDidFinish(_ controller: SafariServices.SFSafariViewController)
  @objc dynamic public func safariViewController(_ controller: SafariServices.SFSafariViewController, initialLoadDidRedirectTo URL: Foundation.URL)
}
@objc public protocol ArutanaBannerDelegate {
  @objc(arutanaBannerReceiveAd) func arutanaBannerReceiveAd()
  @objc(arutanaBannerFailedToReceiveAd:) func arutanaBannerFailedToReceiveAd(code: Arutana.kArutanaErrorCode)
  @objc(arutanaBannerDidTapAd) func arutanaBannerDidTapAd()
}
@objc public class ArutanaBanner : ObjectiveC.NSObject {
  @objc public var delegate: (any Arutana.ArutanaBannerDelegate)?
  @objc public init(locationId: Swift.String, adType: Arutana.ArutanaAdType)
  @objc(setUserId:) public func setUserId(_ userId: Swift.String?)
  @objc(setEnableTestMode:) public func setEnableTestMode(_ isTest: Swift.Bool)
  @objc public func addAdContainerView(_ adContainerView: UIKit.UIView)
  @objc public func loadRequest()
  @objc deinit
}
extension Arutana.ArutanaBanner : SafariServices.SFSafariViewControllerDelegate {
  @objc dynamic public func safariViewControllerDidFinish(_ controller: SafariServices.SFSafariViewController)
}
@objc public protocol ArutanaInterstitialDelegate {
  @objc(arutanaInterstitialReceiveAd:) func arutanaInterstitialReceiveAd(arutanaInterstitial: Arutana.ArutanaInterstitial)
  @objc(arutanaInterstitialShowAd:) func arutanaInterstitialShowAd(arutanaInterstitial: Arutana.ArutanaInterstitial)
  @objc(arutanaInterstitialDidTapAd:) func arutanaInterstitialDidTapAd(arutanaInterstitial: Arutana.ArutanaInterstitial)
  @objc(arutanaInterstitialClose:) func arutanaInterstitialClose(arutanaInterstitial: Arutana.ArutanaInterstitial)
  @objc(arutanaInterstitialFailedToReceiveAd:code:) func arutanaInterstitialFailedToReceiveAd(arutanaInterstitial: Arutana.ArutanaInterstitial, code: Arutana.kArutanaErrorCode)
}
@_inheritsConvenienceInitializers @objc public class ArutanaInterstitial : ObjectiveC.NSObject {
  @objc public var delegate: (any Arutana.ArutanaInterstitialDelegate)?
  @objc public var rootViewController: UIKit.UIViewController? {
    @objc get
    @objc set(value)
  }
  @objc override dynamic public init()
  @objc(setLocationId:) public func setLocationId(_ locationId: Swift.String)
  @objc(setUserId:) public func setUserId(_ userId: Swift.String?)
  @objc(setTopMargin:) public func setTopMargin(_ margin: Swift.Int)
  @objc(setEnableTestMode:) public func setEnableTestMode(_ isTest: Swift.Bool)
  @objc(setAdBackgroundColor:) public func setAdBackgroundColor(_ color: UIKit.UIColor)
  @objc(setAdTextColor:) public func setAdTextColor(_ color: UIKit.UIColor)
  @objc(setWidth:) public func setWidth(_ widthPercentage: CoreFoundation.CGFloat)
  @objc public func preload()
  @objc public func show()
  @objc public func dismiss()
  @objc deinit
}
extension Arutana.ArutanaLogger.LogLevel : Swift.Equatable {}
extension Arutana.ArutanaLogger.LogLevel : Swift.Hashable {}
extension Arutana.ArutanaLogger.LogLevel : Swift.RawRepresentable {}
